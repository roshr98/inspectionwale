name: Backend CI - Build & Push ECR & Update Lambda

on:
  push:
    branches:
      - feature/pdf-generator
      - develop
      - main
  pull_request:
    branches:
      - develop
      - staging

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REPOSITORY: inspectionwale/pdf-generator
      IMAGE_TAG: ${{ github.sha }}
      # read the secret into env (can be empty)
      LAMBDA_FUNCTION: ${{ secrets.LAMBDA_FUNCTION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region $AWS_REGION || \
          aws ecr create-repository --repository-name $ECR_REPOSITORY --region $AWS_REGION

      - name: Build Docker image
        run: |
          docker build -t ${ECR_REPOSITORY}:${IMAGE_TAG} ./backend/pdf-generator

      - name: Tag Docker image for ECR
        run: |
          docker tag ${ECR_REPOSITORY}:${IMAGE_TAG} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${IMAGE_TAG}
          docker tag ${ECR_REPOSITORY}:${IMAGE_TAG} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${IMAGE_TAG}
          docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:latest

      - name: Update Lambda function image (optional)
        if: ${{ env.LAMBDA_FUNCTION != '' }}
        run: |
          echo "Attempting to update Lambda: ${LAMBDA_FUNCTION}"
          if aws lambda get-function --function-name "${LAMBDA_FUNCTION}" --region $AWS_REGION >/dev/null 2>&1; then
            aws lambda update-function-code \
              --function-name "${LAMBDA_FUNCTION}" \
              --image-uri ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${IMAGE_TAG} \
              --region $AWS_REGION
            echo "Lambda updated to image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${IMAGE_TAG}"
          else
            echo "Lambda function ${LAMBDA_FUNCTION} not found; skipping update."
          fi
